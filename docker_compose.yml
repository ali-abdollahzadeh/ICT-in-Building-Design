version: '3.9'

services:

  virtual_building:

    image: lorenzobottaccioli/virtual_building_slim
    container_name: virtual_building
    volumes:
      - ./app:/app
      - ./data:/app/data
    ports:
      - "8888:8888"
    depends_on:
      - mosquitto
    environment:
      - PYTHONUNBUFFERED=1
      - MQTT_BROKER_HOST=mosquitto
    networks:
      - backend
    command: >
      jupyter notebook
      --port=8888
      --no-browser
      --ip=0.0.0.0
      --allow-root
      --NotebookApp.token=''
      --NotebookApp.password=''

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    volumes:
      - influxdb_data:/var/lib/influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=${DB_NAME_SEND}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    networks:
      - backend

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    networks:
      - backend
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_DATABASE_NAME=${DB_NAME_SEND}

  openhab:
    image: openhab/openhab:3.2.0
    container_name: openhab
    volumes:
      - openhab_addons:/openhab/addons
      - openhab_conf:/openhab/conf
      - openhab_userdata:/openhab/userdata
    ports:
      - "8080:8080"
      - "8443:8443"
    restart: always
    networks:
      - backend

  subscriber_send:
    image: python:3.9-slim
    container_name: subscriber_send
    volumes:
      - ./app/services/subscriber_influx:/app
    depends_on:
      - mosquitto
      - influxdb
    environment:
      - PYTHONUNBUFFERED=1
      - MQTT_BROKER_HOST=mosquitto
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_DB=${DB_NAME_SEND}
      - MQTT_TOPIC=virtual_building_send
      - CLIENT_ID=subscriber_send
    command: >
      sh -c "
      pip install --no-cache-dir -r /app/requirements.txt &&
      python /app/subscriber_influx.py"
    networks:
      - backend

  subscriber_control:
    image: python:3.9-slim
    container_name: subscriber_control
    volumes:
      - ./app/services/subscriber_influx:/app
    depends_on:
      - mosquitto
      - influxdb
    environment:
      - PYTHONUNBUFFERED=1
      - MQTT_BROKER_HOST=mosquitto
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_DB=${DB_NAME_CONTROL}
      - MQTT_TOPIC=virtual_building_control
      - CLIENT_ID=subscriber_control
    command: >
      sh -c "
      pip install --no-cache-dir -r /app/requirements.txt &&
      python /app/subscriber_influx.py"
    networks:
      - backend

  subscriber_test:
    image: python:3.9-slim
    container_name: subscriber_test
    volumes:
      - ./app/services/subscriber_influx:/app
    depends_on:
      - mosquitto
      - influxdb
    environment:
      - PYTHONUNBUFFERED=1
      - MQTT_BROKER_HOST=mosquitto
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_DB=${DB_NAME_TEST}
      - MQTT_TOPIC=ict4bd
      - CLIENT_ID=subscriber_test
    command: >
      sh -c "
      pip install --no-cache-dir -r /app/requirements.txt &&
      python /app/subscriber_influx.py"
    networks:
      - backend

  controller:
    image: python:3.9-slim
    container_name: controller
    volumes:
      - ./app/services/controller:/app
      - ./app/virtual_devices:/app/virtual_devices
    depends_on:
      - mosquitto
      - influxdb
    environment:
      - PYTHONUNBUFFERED=1
      - MQTT_BROKER_HOST=mosquitto
      - INFLUXDB_HOST=influxdb
    command: >
      sh -c "
      pip install --no-cache-dir -r /app/requirements.txt &&
      python /app/controller.py"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  influxdb_data:
  grafana_data:
  openhab_addons:
  openhab_conf:
  openhab_userdata:
